{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/collection/collection.component.html","webpack:///./src/app/components/collection/collection.component.ts","webpack:///./src/app/components/generate-pokemon/generate-pokemon.component.html","webpack:///./src/app/components/generate-pokemon/generate-pokemon.component.ts","webpack:///./src/app/components/landing/landing.component.html","webpack:///./src/app/components/landing/landing.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/nav/nav.component.html","webpack:///./src/app/components/nav/nav.component.ts","webpack:///./src/app/components/redeem/redeem.component.html","webpack:///./src/app/components/redeem/redeem.component.ts","webpack:///./src/app/components/register/register.component.html","webpack:///./src/app/components/register/register.component.ts","webpack:///./src/app/components/shop/shop.component.html","webpack:///./src/app/components/shop/shop.component.ts","webpack:///./src/app/components/stats/stats.component.html","webpack:///./src/app/components/stats/stats.component.ts","webpack:///./src/app/models/Pokemon.ts","webpack:///./src/app/models/redeem-ticket.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/jwt-interceptor.service.ts","webpack:///./src/app/services/pokedex.service.ts","webpack:///./src/app/services/token.service.ts","webpack:///./src/app/services/trainer.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\nimport { LandingComponent } from \"./components/landing/landing.component\";\r\nimport { LoginComponent } from \"./components/login/login.component\";\r\nimport { RegisterComponent } from \"./components/register/register.component\";\r\nimport { CollectionComponent } from \"./components/collection/collection.component\";\r\nimport { ShopComponent } from \"./components/shop/shop.component\";\r\nimport { RedeemComponent } from \"./components/redeem/redeem.component\";\r\nimport { GeneratePokemonComponent } from './components/generate-pokemon/generate-pokemon.component';\r\nimport { StatsComponent } from './components/stats/stats.component';\r\n\r\nexport const appRoutes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: LandingComponent\r\n  },\r\n  {\r\n    path: \"landing\",\r\n    component: LandingComponent\r\n  },\r\n  {\r\n    path: \"login\",\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: \"register\",\r\n    component: RegisterComponent\r\n  },\r\n  {\r\n    path: \"generate\",\r\n    component: GeneratePokemonComponent\r\n  },\r\n  {\r\n    path: \"collection\",\r\n    component: CollectionComponent\r\n  },\r\n  {\r\n    path: \"shop\",\r\n    component: ShopComponent\r\n  },\r\n  {\r\n    path: \"redeem\",\r\n    component: RedeemComponent\r\n  },{\r\n    path: 'stats',\r\n    component: StatsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(appRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {}\r\n","<app-nav></app-nav>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Pokémon Collector';\r\n}\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { LandingComponent } from './components/landing/landing.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { ShopComponent } from './components/shop/shop.component';\r\nimport { CollectionComponent } from './components/collection/collection.component';\r\nimport { RedeemComponent } from './components/redeem/redeem.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { GeneratePokemonComponent } from './components/generate-pokemon/generate-pokemon.component';\r\nimport { NavComponent } from './components/nav/nav.component';\r\nimport { JwtInterceptorService } from './services/jwt-interceptor.service'\r\nimport { HighchartsChartModule } from 'highcharts-angular';\r\nimport { StatsComponent } from './components/stats/stats.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    LandingComponent,\r\n    RegisterComponent,\r\n    ShopComponent,\r\n    CollectionComponent,\r\n    RedeemComponent,\r\n    GeneratePokemonComponent,\r\n    NavComponent,\r\n    StatsComponent\r\n  ],\r\n  imports: [\r\n    FormsModule,\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    HighchartsChartModule\r\n  ],\r\n  providers: [{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: JwtInterceptorService,\r\n    multi: true\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col\" id=\"collection-section-header\">\r\n        <img\r\n          class=\"animated jello\"\r\n          id=\"pokedex-heading\"\r\n          src=\"https://fontmeme.com/permalink/190224/f87c04db0b54e3b89caa3d1d3ee405fb.png\"\r\n          alt=\"pokemon-font\"\r\n        />\r\n        <div id=\"card-gallery-grid\">\r\n          <div\r\n            class=\"pokemon-card-outer text-center\"\r\n            *ngFor=\"let pokemon of trainersPokemon\"\r\n          >\r\n            <h4 class=\"pokemon-card-name\">{{ pokemon.name.charAt(0).toUpperCase() + pokemon.name.substring(1) }}</h4>\r\n            <img [src]=\"pokemon.imageUrl\" class=\"pokemon-card-img\" />\r\n            <div class=\"pokemon-card-info-cont\">\r\n              <p *ngIf= \"pokemon.type[1] == null\">Type: {{ pokemon.type[0].charAt(0).toUpperCase() + pokemon.type[0].substring(1) }}</p>\r\n              <p *ngIf= \"pokemon.type[1] != null\"> Type: {{ (pokemon.type[1].charAt(0).toUpperCase() + pokemon.type[1].substring(1)) + \" / \" + \r\n                  pokemon.type[0].charAt(0).toUpperCase() + pokemon.type[0].substring(1)}}</p>\r\n              <p>HP: {{ pokemon.stats.hp }}</p>\r\n  \r\n              <p>Attack: {{ pokemon.stats.attack }}</p>\r\n              <p>Defense: {{ pokemon.stats.defense }}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Trainer } from '../../models/Trainer';\r\nimport { PokedexService } from '../../services/pokedex.service';\r\nimport { Pokemon } from 'src/app/models/Pokemon';\r\nimport {TrainerService} from \"../../services/trainer.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-collection',\r\n  templateUrl: './collection.component.html',\r\n  styleUrls: ['./collection.component.css']\r\n})\r\nexport class CollectionComponent implements OnInit {\r\n\r\n  public trainer: Trainer;\r\n  public login_status: boolean;\r\n\r\n  trainersPokemon: Pokemon[];\r\n\r\n  constructor(private pokedexService: PokedexService, private trainerService: TrainerService, private router: Router) {\r\n   }\r\n\r\n  ngOnInit() {\r\n    //this.trainerService.checkSessionStorage();\r\n    this.trainerService.login_status_bs.subscribe(status => this.login_status = status);\r\n    this.trainerService.current_trainer_bs.subscribe(trainer => this.trainer = trainer);\r\n    if(this.trainer == null){\r\n      this.trainerService.updateLogout();\r\n      this.router.navigateByUrl(\"/PokemonCollector/ng/landing\");\r\n    }\r\n    this.getTrainersPokemon();\r\n  }\r\n\r\n  getTrainersPokemon() {       \r\n    this.pokedexService.getTrainersPokemon(this.trainer.username).subscribe(\r\n      response => {this.trainersPokemon = response}\r\n    ), (err: any) => console.log(`Error: $(err)`)\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"row justify-content-center\">\r\n        <div class=\"col-md-12\">\r\n          <div id=\"drawButton\" class=\"draw-pokemon-cont text-center\">\r\n            <img\r\n              class=\"animated lightSpeedIn img-responsive\"\r\n              id=\"catch-em-all-header\"\r\n              src=\"https://fontmeme.com/permalink/190223/5cfbd92adaffbae8d5b421856e6543f5.png\"\r\n            />\r\n\r\n            <!--(click)=\"onClickMe()\"-->\r\n            <button\r\n              class=\"newPokemon-Generate-Button\"\r\n              data-toggle=\"modal\"\r\n              data-target=\"#newpokemonModal\"\r\n              (click)=\"onClick()\"\r\n            >\r\n              Get a pokemon\r\n            </button>\r\n            <div class=\"row\" id=\"rulesContainerRow mt-5\">\r\n              <div class=\"col-md-2\">\r\n                <img src=\"http://i64.tinypic.com/2nhqjbp.png\" alt=\"\" />\r\n              </div>\r\n              <div class=\"col-md-10\">\r\n                Hello there! Welcome to the world of pokémon!<br />\r\n                My name is Oak! People call me the pokémon Prof!<br />\r\n                This application is inhabited by creatures called pokémon! For\r\n                some people, pokémon are pets. Others use them to build a\r\n                collection and become a pokémon master.<br />\r\n                Click this button to generate a random pokémon to add to your\r\n                collection and increase your score.<br />\r\n                In the shop you can buy pokémon with credits and build your\r\n                collection. <br />When you have duplicate pokémon in your\r\n                collection you can redeem them for more credits to use in the\r\n                shop.<br />\r\n                Your goal is to collect them all.<br />\r\n                Good luck!\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- <div class=\"container mb-3 mt-3\">\r\n        <div class=\"row\" id=\"rulesContainerRow\">\r\n          <div class=\"col-md-2\">\r\n            <img src=\"http://i64.tinypic.com/2nhqjbp.png\" alt=\"\" />\r\n          </div>\r\n          <div class=\"col-md-10\">\r\n            Hello there! Welcome to the world of pokémon!<br> My name is Oak! People\r\n            call me the pokémon Prof!<br> This application is inhabited by creatures\r\n            called pokémon! For some people, pokémon are pets. Others use them\r\n            to build a collection and become a pokémon master.<br> Click this button\r\n            to generate a random pokémon to add to your collection and increase\r\n            your score.<br> In the shop you can buy pokémon with credits and build\r\n            your collection. <br>When you have duplicate pokémon in your collection\r\n            you can redeem them for more credits to use in the shop.<br> Your goal\r\n            is to collect them all.<br> Good luck!\r\n          </div>\r\n        </div>\r\n      </div> -->\r\n\r\n      <!-- Modal -->\r\n      <div\r\n        class=\"modal fade\"\r\n        id=\"newpokemonModal\"\r\n        tabindex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"newpokemonModel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div class=\"modal-dialog\" role=\"document\">\r\n          <div\r\n            class=\"modal-content justify-content-center\"\r\n            id=\"newPokemon-Modal-Content\"\r\n          >\r\n            <div\r\n              class=\"modal-body justify-content-center\"\r\n              id=\"newPokemon-Modal-Body\"\r\n            >\r\n              <img\r\n                src=\"http://i66.tinypic.com/2rrwdck.png\"\r\n                id=\"generate-pokemon-pokeball\"\r\n                class=\"mb-3 animated shake\"\r\n                (click)=\"onBallClick()\"\r\n              />\r\n\r\n              <div\r\n                class=\"pokemon-card-outer text-center d-none\"\r\n                id=\"generate-pokemon-card\"\r\n              >\r\n                <h4 class=\"pokemon-card-name\">{{ pokemonName }}</h4>\r\n                <img src=\"{{ pokemonSprite }}\" class=\"pokemon-card-img\" />\r\n                <div class=\"pokemon-card-info-cont\">\r\n                  <p *ngIf= \"pokemonType?.length == 1\">Type: {{ pokemonType[0].charAt(0).toUpperCase() + pokemonType[0].substring(1) }}</p>\r\n                  <p *ngIf= \"pokemonType?.length == 2\"> Type: {{ pokemonType[1].charAt(0).toUpperCase() + pokemonType[1].substring(1) + \" / \"\r\n                     + pokemonType[0].charAt(0).toUpperCase() + pokemonType[0].substring(1) }}</p>\r\n                  <p>HP: {{hp}}</p>\r\n                  <p>Attack: {{attack}}</p>\r\n                  <p>Defense: {{defense}}</p>\r\n                </div>\r\n              </div>\r\n\r\n              <button\r\n                id=\"generate-pokemon-draw-btn\"\r\n                type=\"button\"\r\n                class=\"newPokemon-Modal-Buttons d-none\"\r\n                (click)=\"onClick()\"\r\n              >\r\n                Draw Another!\r\n              </button>\r\n\r\n              <button\r\n                type=\"button\"\r\n                class=\"newPokemon-Modal-Buttons\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PokedexService } from '../../services/pokedex.service';\r\nimport {Trainer} from \"../../models/Trainer\";\r\nimport {TrainerService} from \"../../services/trainer.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-generate-pokemon',\r\n  templateUrl: './generate-pokemon.component.html',\r\n  styleUrls: ['./generate-pokemon.component.css']\r\n})\r\nexport class GeneratePokemonComponent implements OnInit {\r\n  public pokemonName: string;\r\n  public pokemonType: string[];\r\n  public pokemonSprite: string;\r\n  public hp: number;\r\n  public attack: number;\r\n  public defense: number;\r\n  private cardShow: boolean = false;\r\n  public trainer: Trainer;\r\n  public login_status: boolean;\r\n\r\n  constructor(\r\n    private pokedexService: PokedexService,\r\n    private trainerService: TrainerService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    //Subscribe to behavior subjects within this component\r\n    this.trainerService.login_status_bs.subscribe(status => this.login_status = status);\r\n    this.trainerService.current_trainer_bs.subscribe(trainer => this.trainer = trainer);\r\n    if(this.trainer == null){\r\n      this.trainerService.updateLogout();\r\n      this.router.navigateByUrl(\"/PokemonCollector/ng/landing\");\r\n    }\r\n  }\r\n\r\n  //Subscribe to generatePokemon observable in PokedexService. Set variables based on response and update score in the behavior subject.\r\n  onClick() {\r\n    this.pokedexService.generatePokemon().subscribe(\r\n      data => {\r\n        this.pokemonName = data.name.charAt(0).toUpperCase() + data.name.substring(1);\r\n        this.pokemonType = data.type;\r\n        this.pokemonSprite = data.imageUrl;\r\n        this.hp = data.stats.hp;\r\n        this.attack = data.stats.attack;\r\n        this.defense = data.stats.defense;\r\n        this.trainer.score = data.count;\r\n        this.trainerService.updateValidLogin(this.trainer);\r\n      }\r\n    );\r\n\r\n    //Display pokemon card\r\n    if (this.cardShow) {\r\n      $(\"#generate-pokemon-pokeball\").removeClass(\"d-none\");\r\n      $(\"#generate-pokemon-card\").addClass(\"d-none\");\r\n      $(\"#generate-pokemon-draw-btn\").addClass(\"d-none\");\r\n    }\r\n  }\r\n\r\n  //Display pokeball modal\r\n  onBallClick() {\r\n    $(\"#generate-pokemon-pokeball\").addClass(\"d-none\");\r\n    $(\"#generate-pokemon-card\").removeClass(\"d-none\");\r\n    $(\"#generate-pokemon-draw-btn\").removeClass(\"d-none\");\r\n    this.cardShow = true;\r\n  }\r\n}\r\n","<h1>Top 10 Scores</h1>\r\n<div id=\"outer-most\">\r\n  <div>\r\n    <table id=\"leaderboardTable\">\r\n      <thead></thead>\r\n      <tr>\r\n        <th class=\"tabletext\" id=\"tableusername\" scope=\"col\">Username</th>\r\n        <th class=\"tabletext\" id=\"tablescore\" scope=\"col\">Score</th>\r\n      </tr>\r\n\r\n      <tbody id=\"leaderboardBody\"></tbody>\r\n    </table>\r\n  </div>\r\n  <br />\r\n  <div>\r\n    <button class=\"Button\" routerLink=\"/stats\">Stats</button>\r\n  </div>\r\n  <br />\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Trainer } from \"../../models/Trainer\";\r\nimport { TrainerService } from \"../../services/trainer.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-landing',\r\n  templateUrl: './landing.component.html',\r\n  styleUrls: ['./landing.component.css']\r\n})\r\nexport class LandingComponent implements OnInit {\r\n\r\n  \r\n\r\n  public trainer: Trainer;\r\n  public login_status: boolean;\r\n\r\n  constructor(private trainerService: TrainerService, private router: Router) { }\r\n\r\n  configUrl = \"/PokemonCollector/ng/leaderboard\";\r\n\r\n  ngOnInit() {\r\n\r\n    fetch(this.configUrl)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        //console.log(res);\r\n        let table = document.getElementById('leaderboardBody');\r\n        for (let data of res) {\r\n          table.innerHTML = table.innerHTML + `\r\n          <tr>\r\n      <td style=\"color: white; border: 1px solid black;\" align=\"left\" id =\"tableusername\">${data.username}</td> \r\n      <td style=\"color: white; border: 1px solid black;\" align=\"left\" id =\"tablescore\">${data.score}</td>\r\n      </tr>\r\n      `\r\n        }\r\n      });\r\n\r\n    //this.trainerService.checkSessionStorage();\r\n    this.trainerService.login_status_bs.subscribe(status => this.login_status = status);\r\n    this.trainerService.current_trainer_bs.subscribe(trainer => this.trainer = trainer);\r\n    if (this.trainer != null) {\r\n      this.trainerService.checkSessionStorage();\r\n      this.router.navigateByUrl(\"/PokemonCollector/ng/generate\");\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container login-form-cont\">\r\n  <div class=\"row justify-content-center\">\r\n    <img\r\n      class=\"animated wobble\"\r\n      src=\"https://fontmeme.com/permalink/190223/df35ea09c6d606c33d4048e3403a3369.png\"\r\n      alt=\"\"\r\n      id=\"pokeFONT\"\r\n    />\r\n    <div class=\"col-md-6\">\r\n      <form\r\n        #loginForm=\"ngForm\"\r\n        (ngSubmit)=\"loginTrainer()\"\r\n        novalidate\r\n        class=\"login-form\"\r\n      >\r\n        <div class=\"form-group\">\r\n          <label for=\"USERNAME\">Username</label>\r\n          <input\r\n            type=\"text\"\r\n            required\r\n            #name=\"ngModel\"\r\n            name=\"USERNAME\"\r\n            class=\"form-control\"\r\n            id=\"USERNAME\"\r\n            [class.is-valid]=\"name.valid\"\r\n            [class.is-invalid]=\"name.invalid && name.touched\"\r\n            [(ngModel)]=\"trainerInput.username\"\r\n          />\r\n          <small\r\n            class=\"text-danger\"\r\n            [class.d-none]=\"name.valid || name.untouched\"\r\n            >Name is required.</small\r\n          >\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"PASSWORD\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            required\r\n            #password=\"ngModel\"\r\n            name=\"PASSWORD\"\r\n            class=\"form-control\"\r\n            id=\"PASSWORD\"\r\n            [class.is-valid]=\"password.valid\"\r\n            [class.is-invalid]=\"password.invalid && password.touched\"\r\n            [(ngModel)]=\"trainerInput.password\"\r\n          />\r\n          <small\r\n            class=\"text-danger\"\r\n            [class.d-none]=\"password.valid || password.untouched\"\r\n            >Password is required.</small\r\n          >\r\n        </div>\r\n        <div\r\n          class=\"alert alert-danger alert-dismissible fade show d-none\"\r\n          id=\"login-alert\"\r\n          role=\"alert\"\r\n        >\r\n          <strong>User used login...</strong> It was not very effective.\r\n          <button\r\n            id=\"login-alert-close-btn\"\r\n            type=\"button\"\r\n            class=\"close\"\r\n            aria-label=\"Close\"\r\n            (click)=\"onAlertClose()\"\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <button class=\"btn  btn-block login-form-btn\" type=\"submit\">\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { TokenService } from \"src/app/services/token.service\";\r\nimport { TrainerService } from \"../../services/trainer.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Trainer } from \"../../models/Trainer\";\r\n\r\n@Component({\r\n  selector: \"app-login\",\r\n  templateUrl: \"./login.component.html\",\r\n  styleUrls: [\"./login.component.css\"]\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  NO_LOGIN_FAILED = \"\";\r\n  LOGIN_FAILED = \"<p>Wrong username or password.</p>\";\r\n  currentLoginMessage = this.NO_LOGIN_FAILED;\r\n\r\n  public trainer: Trainer;\r\n  public login_status: boolean;\r\n\r\n  //boolean for login alert\r\n  alertShowing = false;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private tokenService: TokenService,\r\n    private trainerService: TrainerService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    //this.trainerService.checkSessionStorage();\r\n    this.trainerService.login_status_bs.subscribe(\r\n      status => (this.login_status = status)\r\n    );\r\n    this.trainerService.current_trainer_bs.subscribe(\r\n      trainer => (this.trainer = trainer)\r\n    );\r\n    if (this.trainer != null) {\r\n      this.trainerService.checkSessionStorage();\r\n      this.router.navigateByUrl(\"/PokemonCollector/ng/generate\");\r\n    }\r\n  }\r\n\r\n  trainerInput: Trainer = {\r\n    userID: 0,\r\n    username: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    credits: 0,\r\n    score: 0\r\n  };\r\n\r\n  loginTrainer() {\r\n    this.authService\r\n      .attemptLogin(this.trainerInput.username, this.trainerInput.password)\r\n      .subscribe(data => {\r\n        if (data.body == null) {\r\n          console.log(\"in body null if\");\r\n          if (this.alertShowing == false) {\r\n            $(\"#login-alert\").removeClass(\"d-none\");\r\n            this.alertShowing = true;\r\n          }\r\n        } else if (data != null) {\r\n          this.tokenService.setCurrentUserToken(\r\n            data.headers.get(\"Authorization\"),\r\n            data\r\n          );\r\n          //this.trainerService.updateValidLogin(data);\r\n        }\r\n      });\r\n  }\r\n\r\n  onAlertClose() {\r\n    if (this.alertShowing) {\r\n      $(\"#login-alert\").addClass(\"d-none\");\r\n      this.alertShowing = false;\r\n    }\r\n  }\r\n}\r\n","<!-- Default Navbar -->\r\n<nav class=\"navbar navbar-expand-lg \" id=\"baseNavBar\" *ngIf=\"!login_status\">\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link customLink\" href=\"/PokemonCollector/ng/login\" routerLink=\"login\">Login</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link customLink\" href=\"/PokemonCollector/ng/register\" routerLink=\"register\">Sign Up</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link customLink\" href=\"/PokemonCollector/ng/landing\" routerLink=\"landing\">Home</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n</nav>\r\n\r\n  <!-- Signed-In Navbar -->\r\n  <nav class=\"navbar navbar-expand-lg \" id=\"logged-nav-bar\" *ngIf=\"login_status\">\r\n    <img src=\"http://i65.tinypic.com/25iyve1.png\" alt=\"Image and video hosting by TinyPic\"/>\r\n    <p class=\"player-info\">Welcome, {{this.trainer.username}}!</p>\r\n    <p class=\"player-info\">Credits: {{this.trainer.credits}}</p>\r\n    <p class=\"player-info\">Score: {{this.trainer.score}}</p>\r\n\r\n\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav2\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link customLink\" href=\"/PokemonCollector/ng/generate\" routerLink=\"generate\">Home<span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link customLink\" href=\"/PokemonCollector/ng/shop\" routerLink=\"shop\">Shop</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link customLink\" href=\"/PokemonCollector/ng/redeem\" routerLink=\"redeem\">Redeem</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link customLink\" href=\"/PokemonCollector/ng/collection\" routerLink=\"collection\">View Collection</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link customLink\" href=\"/PokemonCollector/ng/landing\" (click)=\"onLogout()\">Logout</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n  <router-outlet></router-outlet>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {Trainer} from \"../../models/Trainer\";\r\nimport {TrainerService} from \"../../services/trainer.service\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n  public trainer: Trainer;\r\n  public login_status: boolean;\r\n\r\n  constructor(private trainerService: TrainerService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.trainerService.login_status_bs.subscribe(status => this.login_status = status);\r\n    this.trainerService.current_trainer_bs.subscribe(trainer => {\r\n      this.trainer = trainer;\r\n    });\r\n  }\r\n\r\n  onLogout(){\r\n    sessionStorage.clear();\r\n    this.trainerService.updateLogout();\r\n    this.router.navigateByUrl(\"/landing\");\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col justify-content-center\" id=\"redeem-form-col\">\r\n      <div class=\"shop-form-scroll\">\r\n        <img\r\n          class=\"animated bounce\"\r\n          id=\"redeem-header-image\"\r\n          src=\"https://fontmeme.com/permalink/190224/e057290604f69fe455bee18756e64510.png\"\r\n          alt=\"pokemon-font\"\r\n        /><br />\r\n        <button class=\"shop-buy-btn\" (click)=\"redeemAll()\">Redeem All</button>\r\n        <form #redeemForm=\"ngForm\" (ngSubmit)=\"redeemSpecific()\" novalidate>\r\n          <!-- data-toggle=\"modal\"\r\n            data-target=\"#newpokemonModal\" -->\r\n          <button class=\"shop-buy-btn\" type=\"submit\">\r\n            Sell\r\n          </button>\r\n\r\n          <div class=\"radio-card-grid\">\r\n            <div\r\n              class=\"form-check radio-form-item\"\r\n              *ngFor=\"let pokemonX of duplicatePokemon\"\r\n            >\r\n              <input\r\n                class=\"form-check-input\"\r\n                type=\"radio\"\r\n                #pokemonCard=\"ngModel\"\r\n                name=\"gridRadios\"\r\n                value=\"{{ pokemonX.id }}\"\r\n                checked\r\n                [(ngModel)]=\"pokemon.id\"\r\n              />\r\n              <div class=\"pokemon-card-outer\">\r\n                <label class=\"form-check-label text-light\" for=\"gridRadios1\">\r\n                  {{ pokemonX.name.charAt(0).toUpperCase() + pokemonX.name.substring(1) }}\r\n                </label>\r\n                <img class=\"pokemon-card-img\" src=\"{{ pokemonX.imageUrl }}\" />\r\n                <div class=\"pokemon-card-info-cont\">\r\n                  <p>Cost: {{ pokemonX.cost }}</p>\r\n                  <br />\r\n                  <p *ngIf= \"pokemonX.type[1] == null\">Type: {{ pokemonX.type[0].charAt(0).toUpperCase() + pokemonX.type[0].substring(1) }}</p>\r\n                  <p *ngIf= \"pokemonX.type[1] != null\"> Type: {{ (pokemonX.type[1].charAt(0).toUpperCase() + pokemonX.type[1].substring(1)) + \" / \" + \r\n                  pokemonX.type[0].charAt(0).toUpperCase() + pokemonX.type[0].substring(1)}}</p>\r\n                  <p>Count: {{ pokemonCount }}</p>\r\n\r\n                  <p>Count: {{ pokemonX.count }}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Trainer } from \"../../models/Trainer\";\r\nimport { TrainerService } from \"../../services/trainer.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { Pokemon } from \"src/app/models/Pokemon\";\r\nimport { PokedexService } from \"../../services/pokedex.service\";\r\nimport { RedeemTicket } from \"src/app/models/redeem-ticket\";\r\n\r\n@Component({\r\n  selector: \"app-redeem\",\r\n  templateUrl: \"./redeem.component.html\",\r\n  styleUrls: [\"./redeem.component.css\"]\r\n})\r\nexport class RedeemComponent implements OnInit {\r\n  public trainer: Trainer;\r\n  public login_status: boolean;\r\n  public pokemon: Pokemon = new Pokemon();\r\n\r\n  //stores an array of Pokemon objects to display to DOM\r\n  public duplicatePokemon: any[] = new Array();\r\n  //stores credit amounts change and new credit amount\r\n  public credits: number;\r\n  redeemTicketModel = new RedeemTicket(0);\r\n  constructor(\r\n    private trainerService: TrainerService,\r\n    private router: Router,\r\n    private pokedexService: PokedexService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    //this.trainerService.checkSessionStorage();\r\n    this.trainerService.login_status_bs.subscribe(\r\n      status => (this.login_status = status)\r\n    );\r\n    this.trainerService.current_trainer_bs.subscribe(\r\n      trainer => (this.trainer = trainer)\r\n    );\r\n    if (this.trainer == null) {\r\n      this.trainerService.updateLogout();\r\n      this.router.navigateByUrl(\"/PokemonCollector/ng/landing\");\r\n    }\r\n    this.getDuplicates();\r\n  }\r\n\r\n  //method that gets duplicates returned from service method and assigns it to variable\r\n  getDuplicates() {\r\n    // this.duplicatePokemon = this.pokedexService.getDuplicates();\r\n    this.pokedexService.getDuplicates().subscribe(Response => {\r\n      this.duplicatePokemon = Response;\r\n    });\r\n  }\r\n\r\n  //method that gets redeemed credits returned from service method and assigns it to variable\r\n  redeemAll() {\r\n    this.pokedexService.redeemAll().subscribe(Response => {\r\n      this.credits = Response;\r\n      //Update Behavior Subject\r\n      this.trainer.credits += Response;\r\n      this.trainerService.updateValidLogin(this.trainer);\r\n    });\r\n\r\n    this.duplicatePokemon = [];\r\n  }\r\n\r\n  //method that gets redeemed credits returned from service method based on a specific pokemon ID and assigns to variable\r\n  redeemSpecific() {\r\n    //Set the redeemticketModel POKEID property to the data binded value.\r\n    this.redeemTicketModel.POKEID = this.pokemon.id;\r\n    //create a temp for the id value\r\n    var tempID = this.pokemon.id;\r\n    //call to the pokedexService to redeemSpecific request\r\n    this.pokedexService\r\n      .redeemSpecific(this.redeemTicketModel)\r\n      .subscribe(Response => {\r\n        //Sets the this.credits to response.\r\n\r\n        this.credits = Response;\r\n        this.trainer.credits += Response;\r\n        this.trainerService.updateValidLogin(this.trainer);\r\n      });\r\n\r\n    let tempArr = new Array();\r\n    //Step through the existing duplicatePokemon array and push all values without redeemed array to temp Array\r\n    for (let i = 0; i < this.duplicatePokemon.length; i++) {\r\n      if (this.duplicatePokemon[i].id != tempID) {\r\n        tempArr.push(this.duplicatePokemon[i]);\r\n      }\r\n    }\r\n\r\n    //Reassign this.duplicatePokemon to the new tempArr\r\n    this.duplicatePokemon = tempArr;\r\n  }\r\n}\r\n","<div class=\"container login-form-cont\">\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col-md-6 justify-content-center\" id=\"register_outer_cont\">\r\n      <img\r\n        class=\"animated wobble mt-3\"\r\n        src=\"https://fontmeme.com/permalink/190312/16a6fa3029a30455d5905b3f520897c9.png\"\r\n        id=\"pokeFONT\"\r\n      />\r\n\r\n      <form\r\n        id=\"registerForm\"\r\n        class=\" login-form\"\r\n        #registerForm=\"ngForm\"\r\n        (ngSubmit)=\"registerTrainer()\"\r\n        method=\"POST\"\r\n      >\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">Username </label>\r\n          <input\r\n            name=\"username\"\r\n            class=\"form-control\"\r\n            required\r\n            placeholder=\"Username\"\r\n            #username\r\n          />\r\n\r\n          <div\r\n            *ngIf=\"username.invalid && (username.dirty || username.touched)\"\r\n            class=\"alert alert-danger\"\r\n          >\r\n            <div *ngIf=\"username.errors.required\">\r\n              Username is required.\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">Password </label>\r\n          <input\r\n            name=\"password\"\r\n            class=\"form-control\"\r\n            required\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            #password\r\n          />\r\n\r\n          <div\r\n            *ngIf=\"password.invalid && (password.dirty || password.touched)\"\r\n            class=\"alert alert-danger\"\r\n          >\r\n            <div *ngIf=\"password.errors.required\">\r\n              Password is required.\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"fname\">First Name </label>\r\n          <input\r\n            name=\"fname\"\r\n            class=\"form-control\"\r\n            required\r\n            placeholder=\"First Name\"\r\n            #fname\r\n          />\r\n\r\n          <div\r\n            *ngIf=\"fname.invalid && (fname.dirty || fname.touched)\"\r\n            class=\"alert alert-danger\"\r\n          >\r\n            <div *ngIf=\"fname.errors.required\">\r\n              First name is required.\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"lname\">Last Name </label>\r\n          <input\r\n            name=\"lname\"\r\n            class=\"form-control\"\r\n            required\r\n            placeholder=\"Last Name\"\r\n            #lname\r\n          />\r\n\r\n          <div\r\n            *ngIf=\"lname.invalid && (lname.dirty || lname.touched)\"\r\n            class=\"alert alert-danger\"\r\n          >\r\n            <div *ngIf=\"lname.errors.required\">\r\n              Last name is required.\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email </label>\r\n          <input\r\n            name=\"email\"\r\n            class=\"form-control\"\r\n            required\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            #email\r\n          />\r\n\r\n          <div\r\n            *ngIf=\"email.invalid && (email.dirty || email.touched)\"\r\n            class=\"alert alert-danger\"\r\n          >\r\n            <div *ngIf=\"email.errors.required\">\r\n              Email is required.\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <input\r\n          name=\"submit\"\r\n          type=\"submit\"\r\n          class=\"btn btn-block login-form-btn\"\r\n          [disabled]=\"!registerForm.form.valid\"\r\n        />\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { TrainerService } from 'src/app/services/trainer.service';\r\nimport { Router } from '@angular/router';\r\nimport {Trainer} from \"../../models/Trainer\";\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  public trainer: Trainer;\r\n  public login_status: boolean;\r\n\r\n  constructor(private trainerService: TrainerService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    //this.trainerService.checkSessionStorage();\r\n    this.trainerService.login_status_bs.subscribe(status => this.login_status = status);\r\n    this.trainerService.current_trainer_bs.subscribe(trainer => this.trainer = trainer);\r\n    if(this.trainer != null){\r\n      this.trainerService.checkSessionStorage();\r\n      this.router.navigateByUrl(\"/PokemonCollector/ng/generate\");\r\n    }\r\n  }\r\n\r\n  registerTrainer() {\r\n    let credentials : FormData = new FormData(document.querySelector(\"form\"));\r\n    this.trainerService.createTrainer(credentials).subscribe(\r\n      data => {\r\n        if (data.status === 200) {\r\n          this.router.navigateByUrl(\"/landing\");\r\n        } else {\r\n          console.log(\"Bad Request\");\r\n        }\r\n          \r\n      }\r\n    );\r\n  }\r\n}\r\n","\r\n  \r\n  <!-- <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col\"> -->\r\n  <div class=\"container \" id=\"shop-form-container\">\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col justify-content-center\" id=\"shop-form-col\">\r\n        <div class=\"shop-form-scroll\">\r\n          <form name=\"buyForm\" #buyForm=\"ngForm\" novalidate>\r\n            <div id=\"shop-form-header\">\r\n              <img\r\n                class=\"animated shake\"\r\n                id=\"poke-shop-header\"\r\n                src=\"https://fontmeme.com/permalink/190223/7f951f27330efe3f5e717c68950edf06.png\"\r\n                alt=\"\"\r\n              />\r\n              <button\r\n                data-toggle=\"modal\"\r\n                data-target=\"#newpokemonModal\"\r\n                class=\"shop-buy-btn\"\r\n                id=\"shop-buy-btn\"\r\n                type=\"submit\"\r\n              >\r\n                Buy\r\n              </button>\r\n           \r\n            </div>\r\n            <form>\r\n              <select name=\"setNumPoke\" class=\"form-control\" [(ngModel)]=\"numPoke\" (change)=\"populatePokePages()\">\r\n                <option value=0 selected>Number of Pokemon per page</option>\r\n                <option value=20>20</option>\r\n                <option value=50>50</option>\r\n                <option value=100>100</option>\r\n              </select>\r\n            </form>\r\n            <div *ngIf=\"showPagination\">\r\n              <button type=\"button\" value=\"previous page\" (click)=\"prevPage()\"><</button>\r\n              <!--\r\n                put numbers for new pages here \r\n                <div *ngFor=\"let number of numPages\">>\r\n              </div>\r\n             -->\r\n             <button type=\"button\" value=\"next page\" (click)=\"nextPage()\">></button>\r\n            </div>            \r\n            <div class=\"radio-card-grid\">\r\n              <div\r\n                class=\"form-check radio-form-item\"\r\n                *ngFor=\"let pokemon of pokePages\"\r\n              >\r\n                <input\r\n                  class=\"form-check-input customRadioBtn\"\r\n                  type=\"radio\"\r\n                  #pokemonCard=\"ngModel\"\r\n                  name=\"gridRadios\"\r\n                  value=\"{{ pokemon.id }}\"\r\n                  checked\r\n                  [(ngModel)]=\"selectedPoke\"\r\n                />\r\n                <div class=\"pokemon-card-outer\">\r\n                  <label\r\n                    class=\"form-check-label shop-poke-name\"\r\n                    for=\"gridRadios1\"\r\n                  >\r\n                    {{ pokemon.name }}\r\n                  </label>\r\n                  <img class=\"pokemon-card-img\" src=\"{{ pokemon.imageUrl }}\" />\r\n                  <div class=\"pokemon-card-info-cont\">\r\n                      <p *ngIf= \"pokemon.type[1] == null\">Type: {{ pokemon.type[0].charAt(0).toUpperCase() + pokemon.type[0].substring(1) }}</p>\r\n                      <p *ngIf= \"pokemon.type[1] != null\"> Type: {{ (pokemon.type[1].charAt(0).toUpperCase() + pokemon.type[1].substring(1)) + \" / \" +\r\n                          pokemon.type[0].charAt(0).toUpperCase() + pokemon.type[0].substring(1)}}</p>  \r\n                    <!-- <p>HP: {{ pokemon.hp }}</p>\r\n                    <p>Attack: {{ pokemon.attack }}</p>\r\n                    <p>Defense: {{ pokemon.defense }}</p> -->\r\n                    <p>HP: {{ pokemon.stats.hp }}</p>\r\n                    <p>Attack: {{ pokemon.stats.attack }}</p>\r\n                    <p>Defense: {{ pokemon.stats.defense }} </p>\r\n                    <!-- <p>Stats:</p>\r\n                      <p>Attack: {{ pokemon.stats.attack }}</p>\r\n                      <p>Defense: {{ pokemon.stats.defense }} </p>\r\n                      <p>HP: {{ pokemon.stats.hp }}</p>\r\n                      <p>Special attack: {{ pokemon.stats.special-attack }}</p>\r\n                      <p>Special defense: {{ pokemon.stats.special-defense }}</p>\r\n                      <p>Speed: {{ pokemon.stats.speed }}</p> -->\r\n                    <p>Cost: {{ pokemon.cost }}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <!-- <p>--trying pagination below here</p>\r\n            <div class=\"radio-card-grid\" *ngIf = \"numPoke != 0\">\r\n                <div\r\n                  class=\"form-check radio-form-item\"\r\n                  *ngFor=\"let pokemon of pokePages\"\r\n                >\r\n                  <input\r\n                    class=\"form-check-input customRadioBtn\"\r\n                    type=\"radio\"\r\n                    #pokemonCard=\"ngModel\"\r\n                    name=\"gridRadios\"\r\n                    value=\"{{ pokemon.id }}\"\r\n                    checked\r\n                    [(ngModel)]=\"selectedPoke\"\r\n                  />\r\n                  <div class=\"pokemon-card-outer\">\r\n                    <label\r\n                      class=\"form-check-label shop-poke-name\"\r\n                      for=\"gridRadios1\"\r\n                    >\r\n                      {{ pokemon.name }}\r\n                    </label>\r\n                    <img class=\"pokemon-card-img\" src=\"{{ pokemon.imageUrl }}\" />\r\n                    <div class=\"pokemon-card-info-cont\">\r\n                        <p *ngIf= \"pokemon.type[1] == null\">Type: {{ pokemon.type[0].charAt(0).toUpperCase() + pokemon.type[0].substring(1) }}</p>\r\n                        <p *ngIf= \"pokemon.type[1] != null\"> Type: {{ (pokemon.type[1].charAt(0).toUpperCase() + pokemon.type[1].substring(1)) + \" / \" +\r\n                            pokemon.type[0].charAt(0).toUpperCase() + pokemon.type[0].substring(1)}}</p>  \r\n                        <p>HP: {{ pokemon.hp }}</p>\r\n                      <p>Attack: {{ pokemon.attack }}</p>\r\n                      <p>Defense: {{ pokemon.defense }}</p>\r\n                      <p>HP: {{ pokemon.stats.hp }}</p>\r\n                      <p>Attack: {{ pokemon.stats.attack }}</p>\r\n                      <p>Defense: {{ pokemon.stats.defense }} </p>\r\n                       <p>Stats:</p>\r\n                        <p>Attack: {{ pokemon.stats.attack }}</p>\r\n                        <p>Defense: {{ pokemon.stats.defense }} </p>\r\n                        <p>HP: {{ pokemon.stats.hp }}</p>\r\n                        <p>Special attack: {{ pokemon.stats.special-attack }}</p>\r\n                        <p>Special defense: {{ pokemon.stats.special-defense }}</p>\r\n                        <p>Speed: {{ pokemon.stats.speed }}</p>\r\n                      <p>Cost: {{ pokemon.cost }}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div> -->\r\n  \r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>\r\n  <!-- Modal for chosen pokemon-->\r\n  <div\r\n    class=\"modal fade\"\r\n    id=\"newpokemonModal\"\r\n    tabindex=\"-1\"\r\n    role=\"dialog\"\r\n    aria-labelledby=\"newpokemonModel\"\r\n    aria-hidden=\"true\"\r\n  >\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div\r\n        class=\"modal-content justify-content-center\"\r\n        id=\"newPokemon-Modal-Content\"\r\n      >\r\n        <div class=\"modal-body justify-content-center\" id=\"newPokemon-Modal-Body\">\r\n          <!-- <img\r\n            src=\"http://i66.tinypic.com/2rrwdck.png\"\r\n            id=\"generate-pokemon-pokeball\"\r\n            class=\"mb-3 animated shake\"\r\n            (click)=\"onBallClick()\"\r\n          /> -->\r\n          <div\r\n            class=\"pokemon-card-outer text-center\"\r\n            id=\"generate-pokemon-card\"\r\n          >\r\n            <!-- *ngFor=\"let pokemon of pokemonArr\" -->\r\n            <h4 class=\"pokemon-card-name\">{{ allPoke[selectedPoke - 1].name }}</h4>\r\n  \r\n            <img src=\"{{ allPoke[selectedPoke - 1].imageUrl }}\" class=\"pokemon-card-img\" />\r\n            <div class=\"pokemon-card-info-cont\">\r\n                <!-- <p>Stats:</p>\r\n                <p>Attack: {{ pokemon.stats.attack }}</p>\r\n                <p>Defense: {{ pokemon.stats.defense }} </p>\r\n                <p>HP: {{ pokemon.stats.hp }}</p>\r\n                <p>Special-attack: {{ pokemon.stats.special-attack }}</p>\r\n                <p>Special-defense: {{ pokemon.stats.special-defense }}</p>\r\n                <p>Speed: {{ pokemon.stats.speed }}</p> -->\r\n                <p>Type: {{allPoke[selectedPoke - 1].type}}</p>\r\n            </div>\r\n          </div>\r\n          <!-- start no credits alert -->\r\n          <div\r\n          class=\"alert alert-danger alert-dismissible fade show d-none\"\r\n          id=\"no-credit-alert\"\r\n          role=\"alert\"\r\n        >\r\n          <img src=\"http://i64.tinypic.com/2nhqjbp.png\" alt=\"\" />\r\n\r\n          <strong>Oops!!</strong> You dont have enough credits.....\r\n\r\n          <img\r\n            src=\"http://i65.tinypic.com/27zauqe.png\"\r\n            alt=\"Image and video hosting by TinyPic\"\r\n          />\r\n          <button\r\n            id=\"login-alert\"\r\n            type=\"button\"\r\n            class=\"close\"\r\n            aria-label=\"Close\"\r\n            (click)=\"onAlertClose()\"\r\n          >\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        <!-- end no credit alert -->\r\n        <!-- start I choose you alert -->\r\n        <div\r\n        class=\"alert alert-danger alert-dismissible fade show d-none\"\r\n        id=\"add-pokemon-alert\"\r\n        role=\"alert\"\r\n      >\r\n        <img src=\"http://i64.tinypic.com/2nhqjbp.png\" alt=\"\" />\r\n\r\n        <strong>I Choose You!!</strong> This Pokemon has been added to your collection.\r\n\r\n        <img\r\n          src=\"http://i65.tinypic.com/27zauqe.png\"\r\n          alt=\"Image and video hosting by TinyPic\"\r\n        />\r\n        <button\r\n          id=\"login-alert\"\r\n          type=\"button\"\r\n          class=\"close\"\r\n          aria-label=\"Close\"\r\n          (click)=\"onAlertClose()\"\r\n        >\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n        <!-- end I choose you alert -->\r\n        <!-- start confirmation button -->\r\n          <button\r\n                data-toggle=\"modal\"\r\n                data-target=\"#newpokemonConfirm\"\r\n                data-dismiss=\"modal\"\r\n                class=\"shop-buy-btn\"\r\n                type=\"submit\"\r\n                (click)=\"onBuySubmit()\"\r\n              >\r\n                I Choose You!\r\n              </button>\r\n        <!--end confirmation button  -->\r\n        <!-- start close button -->\r\n          <button\r\n            type=\"button\"\r\n            class=\"shop-buy-btn\"\r\n            data-dismiss=\"modal\"\r\n          >\r\n            Close\r\n          </button>\r\n        <!-- end close button  -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n<!-- end modal -->\r\n<form>\r\n  <select name=\"setNumPoke\" class=\"form-control\" [(ngModel)]=\"numPoke\" (change)=\"populatePokePages()\">\r\n    <option value=0>Number of Pokemon per page</option>\r\n    <option value=20>20</option>\r\n    <option value=50>50</option>\r\n    <option value=100>100</option>\r\n  </select>\r\n</form>    \r\n   \r\n  \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PokedexService } from '../../services/pokedex.service';\r\nimport { Pokemon } from 'src/app/models/Pokemon';\r\nimport {Router} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport {Trainer} from \"../../models/Trainer\";\r\nimport {TrainerService} from \"../../services/trainer.service\";\r\n\r\n@Component({\r\n  selector: 'app-shop',\r\n  templateUrl: './shop.component.html',\r\n  styleUrls: ['./shop.component.css']\r\n})\r\nexport class ShopComponent implements OnInit {\r\n  private TOTALPOKEMON: number = 151;\r\n  public showPagination: boolean = false;\r\n  private paginationArray: number[];\r\n  public numPoke: number;\r\n  private currentPage: number;\r\n  public numPages: number;\r\n  public allPoke: Pokemon[];\r\n  public pokePages: Pokemon[];\r\n  public trainer: Trainer;\r\n  public login_status: boolean;\r\n  public cardShow: boolean = false;\r\n  public selectedPoke: number;\r\n  public alertShowing: boolean = false;\r\n  private httpJSON = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type':  'application/json'\r\n    })};\r\n\r\n  constructor(private http: HttpClient, private trainerService: TrainerService, private router: Router, private pokedexService: PokedexService) { }\r\n\r\n  ngOnInit() {\r\n    //this.trainerService.checkSessionStorage();\r\n    this.trainerService.login_status_bs.subscribe(status => this.login_status = status);\r\n    this.trainerService.current_trainer_bs.subscribe(trainer => this.trainer = trainer);\r\n    if(this.trainer == null){\r\n      this.trainerService.updateLogout();\r\n      this.router.navigateByUrl(\"/PokemonCollector/ng/landing\");\r\n    }\r\n    this.populatePokeArray();\r\n    // this.populatePokePages();\r\n  }\r\n  // onBallClick() {\r\n  //   //Hide pokeball img and show card div\r\n  //   $(\"#generate-pokemon-pokeball\").addClass(\"d-none\");\r\n  //   $(\"#generate-pokemon-card\").removeClass(\"d-none\");\r\n  //   $(\"#generate-pokemon-draw-btn\").removeClass(\"d-none\");\r\n  //   this.cardShow = true;\r\n  \r\n  //method that calls above observable\r\n  //iscalled onInit\r\n  populatePokeArray(): void{\r\n    this.pokedexService.getAllPokemon().subscribe(\r\n      data => {\r\n        //put all pokemon into pokemon array\r\n        this.allPoke = [];\r\n        for (let i = 0; i < data.length; i++){\r\n          let newPoke = new Pokemon();\r\n          newPoke.name = data[i].name.charAt(0).toUpperCase() + data[i].name.slice(1);\r\n          newPoke.imageUrl = data[i].imageUrl;\r\n          newPoke.id = data[i].id;\r\n          newPoke.count = data[i].count;\r\n          newPoke.stats = data[i].stats;\r\n          newPoke.type = data[i].type;\r\n          newPoke.cost = data[i].cost;\r\n          this.allPoke[i] = newPoke;\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  // populatePokePages(): void{\r\n  //   let count = 0;\r\n  //   this.currentPage = 0;\r\n  //   //display number of pokemon on page from radio button\r\n  //   for (let i = (this.currentPage * this.numPoke + 1); i < (this.currentPage * this.numPoke + this.numPoke); i++){\r\n  //     this.pokePages[count] = this.allPoke[i];\r\n  //     count++;\r\n  //   }\r\n  //   this.numPages = Math.ceil(this.TOTALPOKEMON/this.numPoke);\r\n  // }\r\n  \r\n  populatePokePages(): void{\r\n    this.currentPage = 1;\r\n    this.pokePages = this.allPoke.slice((this.currentPage-1)*this.numPoke,(this.currentPage*this.numPoke));\r\n    this.showPagination = true;\r\n  }\r\n\r\n  changePokePages(): void{\r\n    if (((this.currentPage*this.numPoke)+1) > this.allPoke.length){\r\n      this.pokePages = this.allPoke.slice((this.currentPage-1)*this.numPoke);\r\n    }\r\n    else{\r\n      this.pokePages = this.allPoke.slice((this.currentPage-1)*this.numPoke,(this.currentPage*this.numPoke));\r\n    }\r\n  }\r\n\r\n  //pagination methods on standby\r\n  showPaginationNavbar(): void{\r\n    this.numPages = Math.ceil(this.TOTALPOKEMON/this.numPoke);\r\n    for (let i = 0; i < this.numPages; i++){\r\n      this.paginationArray[i] = i+1;\r\n    }\r\n  }\r\n\r\n  //jump to specific page\r\n  specificPage(pageNumber: number): void{\r\n    this.currentPage = pageNumber;\r\n    this.changePokePages();\r\n  }\r\n\r\n  //wrap around to first page if on last page\r\n  nextPage(): void{\r\n    if (this.currentPage == this.numPages){\r\n      this.currentPage = 1;\r\n      this.changePokePages();\r\n    }\r\n    else{\r\n      this.currentPage++;\r\n      this.changePokePages();\r\n    }\r\n  }\r\n\r\n  //wrap around to last page if on first page\r\n  prevPage(): void{\r\n    if (this.currentPage == 1){\r\n      this.currentPage = this.numPages;\r\n      this.changePokePages();\r\n    }\r\n    else{\r\n      this.currentPage--;\r\n      this.changePokePages();\r\n    }\r\n  }\r\n\r\n  onBuySubmit() {\r\n    if (this.trainer.credits > this.allPoke[this.selectedPoke-1].cost){\r\n      if (this.alertShowing == false){\r\n        $(\"#no-credit-alert\").removeClass(\"d-none\");\r\n        this.alertShowing = true;  \r\n      }\r\n    }\r\n    else{\r\n      let cost: number = this.allPoke[this.selectedPoke-1].cost;\r\n        console.log(\"In purchase True\")\r\n        this.trainer.credits = this.trainer.credits-cost;\r\n        this.trainerService.updateValidLogin(this.trainer);\r\n        this.http.post(\r\n           \"/PokemonCollector/servlet/purchase\",\r\n           this.allPoke[this.selectedPoke-1]\r\n         ).subscribe();      \r\n      }\r\n      if (this.alertShowing){\r\n        $(\"#no-credit-alert\").removeClass(\"d-none\");\r\n        this.alertShowing = false;  \r\n      }\r\n  } \r\n\r\n  onAlertClose() {\r\n    if (this.alertShowing) {\r\n      $(\"#login-alert\").addClass(\"d-none\");\r\n      this.alertShowing = false;\r\n    }\r\n  }\r\n}\r\n","<div align=\"center\">\r\n  <br>\r\n <div>\r\n    <highcharts-chart [Highcharts]=\"Highcharts\" [options]=\"PokemonOption\" style=\"width: 90%; height: 700px; display: block;\"></highcharts-chart>\r\n  </div>\r\n  <div>\r\n    <highcharts-chart [Highcharts]=\"Highcharts\" [options]=\"pokeCountTotal\" style=\"width: 90%; height: 700px; display: block;  margin : 10px;\"></highcharts-chart>\r\n  </div>\r\n  <div>\r\n    <highcharts-chart [Highcharts]=\"Highcharts\" [options]=\"pokeCount\" style=\"width: 90%; height: 700px; display: block;\"></highcharts-chart>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as Highcharts from 'highcharts';\r\n\r\n@Component({\r\n  selector: 'app-stats',\r\n  templateUrl: './stats.component.html',\r\n  styleUrls: ['./stats.component.css']\r\n})\r\nexport class StatsComponent implements OnInit {\r\n\r\n  data1 ;\r\n\r\n    total = this.data1;\r\n\r\n  Highcharts = Highcharts;\r\n\r\n  constructor() { }\r\n\r\n  //configUrl = \"http://localhost:8080/PokemonCollector/ng/stats1\";\r\n     configUrl = \"/PokemonCollector/ng/stats1\";\r\n\r\n  pokeCount;\r\n  pokeCountTotal;\r\n  PokemonOption;\r\n\r\n  ngOnInit() {\r\n    fetch(this.configUrl)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        this.data1 = res;\r\n\r\n\r\n        this.configUrl = \"/PokemonCollector/ng/stats2\";\r\n        //this.configUrl = \"http://localhost:8080/PokemonCollector/ng/stats2\";\r\n      fetch(this.configUrl)\r\n      .then(res => res.json())\r\n      .then(res => {\r\n        this.total = res;\r\n        this.load();\r\n      });\r\n      });\r\n  }\r\n\r\n  load() {\r\n    this.pokeCountTotal = {\r\n      chart: {\r\n        type: 'column',\r\n        marginBottom: \"150\",\r\n        spacingTop : \"1\",\r\n        marginTop : \"150\",\r\n        marginLeft: \"150\",\r\n        marginRight : \"150\"\r\n      },\r\n      title: {\r\n        text: 'Pokemons Per Trainer'\r\n      },\r\n      subtitle: {\r\n        text: 'Top 10'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        labels: {\r\n          rotation: -45,\r\n          style: {\r\n            fontSize: '13px',\r\n            fontFamily: 'Verdana, sans-serif'\r\n          }\r\n        }\r\n      },\r\n      yAxis: {\r\n        min: 0,\r\n        title: {\r\n          text: 'Pokemon'\r\n        }\r\n      },\r\n      legend: {\r\n        enabled: false\r\n      },\r\n      tooltip: {\r\n        pointFormat: 'Pokemons: <b>{point.y:.0f}</b>'\r\n      },\r\n      series: [{\r\n        name: 'Population',\r\n        data: this.total,\r\n        dataLabels: {\r\n          enabled: true,\r\n          rotation: 0,\r\n          color: 'black',\r\n          align: 'right',\r\n          format: '{point.y:.0f}', // one decimal\r\n          y: -25, // 10 pixels down from the top\r\n          x: -10,\r\n          style: {\r\n            fontSize: '13px',\r\n            fontFamily: 'Verdana, sans-serif'\r\n            }\r\n        }\r\n      }]\r\n    }\r\n\r\n    this.pokeCount = {\r\n      chart: {\r\n        type: 'column',\r\n        marginBottom: \"150\",\r\n        marginTop : \"150\",\r\n        marginLeft: \"150\",\r\n        marginRight : \"150\",\r\n        spacingTop : \"1\",\r\n\r\n      },\r\n      title: {\r\n        text: 'Unique Pokemons Per Trainer'\r\n      },\r\n      subtitle: {\r\n        text: 'Top 10'\r\n      },\r\n      xAxis: {\r\n        type: 'category',\r\n        labels: {\r\n          rotation: -45,\r\n          style: {\r\n            fontSize: '13px',\r\n            fontFamily: 'Verdana, sans-serif'\r\n          }\r\n        }\r\n      },\r\n      yAxis: {\r\n        min: 0,\r\n        title: {\r\n          text: 'Pokemon'\r\n        }\r\n      },\r\n      legend: {\r\n        enabled: false\r\n      },\r\n      tooltip: {\r\n        pointFormat: 'Pokemons: <b>{point.y:.0f}</b>'\r\n      },\r\n      series: [{\r\n        name: 'Population',\r\n        data: this.data1,\r\n        dataLabels: {\r\n          enabled: true,\r\n          rotation: 0,\r\n          color: '#black',\r\n          align: 'right',\r\n          format: '{point.y:.0f}',\r\n          y: -25, \r\n          x: -10,\r\n            style: {\r\n            fontSize: '13px',\r\n            fontFamily: 'Verdana, sans-serif'\r\n          }\r\n        }\r\n      }]\r\n    }\r\n\r\n\r\n\r\n    this.PokemonOption = {\r\n      chart: {\r\n        plotBackgroundColor: null,\r\n        plotBorderWidth: null,\r\n        plotShadow: false,\r\n        type: 'pie',\r\n        marginBottom: \"150\",\r\n        marginTop : \"150\",\r\n        marginLeft: \"150\",\r\n        marginRight : \"150\",\r\n        spacingTop : \"1\",\r\n      },\r\n      title: {\r\n        text: 'Distribution Of Pokemon Per Players'\r\n      },\r\n      subtitle: {\r\n        text: 'Top 10'\r\n      },\r\n      tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          allowPointSelect: true,\r\n          cursor: 'pointer',\r\n          dataLabels: {\r\n            enabled: true,\r\n            format: '<b>{point.name}</b>',\r\n            style: {\r\n              // color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'\r\n            }\r\n          }\r\n        }\r\n      },\r\n      series: [{\r\n        name: 'Pokemon',\r\n        colorByPoint: true,\r\n        data: this.total\r\n      }]\r\n    };\r\n  }\r\n\r\n}\r\n","export class Pokemon {\r\n  id: number;\r\n  name: string;\r\n  imageUrl: string;\r\n  type: string[];\r\n  stats: any[];\r\n  count: number;\r\n  cost: number;\r\n}\r\n","export class RedeemTicket {\r\n  constructor(public POKEID: number) {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { Trainer } from \"../models/Trainer\";\r\nimport { TrainerService } from \"./trainer.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class AuthService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /*\r\n    This function takes in 2 parameters, the username and password and \r\n    returns an observable. It makes a HTTP POST request to the login endpoint\r\n  */\r\n  attemptLogin(username: string, password: string): Observable<any> {\r\n    let credentials : FormData = new FormData();\r\n    credentials.append(\"USERNAME\", username);\r\n    credentials.append(\"PASSWORD\", password);\r\n    return this.http.post(\r\n      environment.api.login,\r\n      credentials,\r\n      {\r\n        headers: this.getHttpHeaders(),\r\n        observe: \"response\"\r\n      }\r\n    );\r\n  }\r\n\r\n  private getHttpHeaders(): HttpHeaders {\r\n    //Creates headers for the HTTP post request to get around CORS filters\r\n    const headers: HttpHeaders = new HttpHeaders();\r\n    headers.append(\"Access-Control-Allow-Origin\", \"http://localhost:4200\");\r\n    return headers;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent\r\n} from \"@angular/common/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { TokenService } from \"./token.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class JwtInterceptorService {\r\n  //Before any HTTP request is sent, it intercepts the HTTP request\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    //If you are on the login page\r\n    if (req.url.includes(\"login\") || req.url.includes(\"register\") || req.url === \"/\") {\r\n      return next.handle(req);\r\n    }\r\n    req = req.clone({\r\n      headers: this.tokenService.getAuthorizedRequestHeader()\r\n    });\r\n    return next.handle(req);\r\n  }\r\n\r\n  //Injects tokenSerivce into JwtInterceptorService\r\n  constructor(private tokenService: TokenService) {}\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Trainer } from \"../models/Trainer\";\r\n\r\n// import { POKEMON } from \"../temp/tempPoke\";\r\nimport { Pokemon } from \"../models/Pokemon\";\r\nimport { RedeemTicket } from \"../models/redeem-ticket\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class PokedexService {\r\n  //used to store ArrayList of Pokemon Objects from the Response of the GET request to get trainer's dup' pokemon\r\n  duplicatePokemon: any; //FOR REDEEM COMPONENT\r\n  //used to store Array of 'int' from the Response of the GET request to get trainer's remaining credits\r\n  credits: any; //FOR REDEEM COMPONENT\r\n  redeemTicketModel = new RedeemTicket(0);\r\n  trainerPokemon: Pokemon[];\r\n\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  generatePokemon() {\r\n    return this._http.get<any>(\"/PokemonCollector/servlet/generatePokemon\");\r\n  }\r\n\r\n  getTrainersPokemon(username: String) {\r\n    return this._http.get<any>(\"/PokemonCollector/servlet/collection\");\r\n  }\r\n\r\n  //returns all duplicate pokemon of logged in user\r\n  getDuplicates() {\r\n    return this._http.get<any>(\"/PokemonCollector/servlet/duplicate\");\r\n  }\r\n\r\n  //returns updated credits and increased credit amount when redeeming all pokemon\r\n  redeemAll() {\r\n    return this._http.get<any>(\"/PokemonCollector/servlet/redeemAll\");\r\n  }\r\n\r\n  //returns updated credits and increased credit amount when redeeming a specific pokemon\r\n  redeemSpecific(redeemTicket: RedeemTicket) {\r\n    //make POST request to get array of 'int's which will resemble credits earned and credits after redeem\r\n    return this._http.post<any>(\r\n      \"/PokemonCollector/servlet/redeem\",\r\n      redeemTicket\r\n    );\r\n  }\r\n\r\n  //gets all pokeinfo from the cache\r\n  getAllPokemon(): Observable<any[]>{\r\n    return this._http.get<any>(\"/PokemonCollector/servlet/allpokemon\")\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { HttpHeaders } from \"@angular/common/http\";\r\n\r\nimport { GeneratePokemonComponent } from \"../components/generate-pokemon/generate-pokemon.component\";\r\nimport { TrainerService } from \"./trainer.service\";\r\nimport { Trainer } from \"../models/Trainer\";\r\nimport {PokedexService} from \"./pokedex.service\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class TokenService {\r\n  constructor(private router: Router, private trainerService: TrainerService, private pokedexService: PokedexService) {}\r\n\r\n  /*\r\n  Sets a user token to session storage when the \r\n  user logs in\r\n  */\r\n  setCurrentUserToken(token: string, resp: any) {\r\n    if (token) {\r\n      sessionStorage.setItem(\"CURRENT_USER\", token);\r\n      //console.log(resp);\r\n      let t: Trainer = {\r\n        userID: resp.body.userID,\r\n        username: resp.body.username,\r\n        password: '',\r\n        firstName: resp.body.firstName,\r\n        lastName: resp.body.lastName,\r\n        email: resp.body.email,\r\n        credits: resp.body.credits,\r\n        score: resp.body.score\r\n      }\r\n      //console.log(t);\r\n      sessionStorage.setItem(\"TRAINER_DATA\", JSON.stringify(t));\r\n      this.trainerService.updateValidLogin(t);\r\n      this.pokedexService.getTrainersPokemon(t.username).subscribe(\r\n        val => val,\r\n        err => err\r\n      );\r\n      this.router.navigateByUrl(\"/generate\");\r\n    } else {\r\n      throw new Error();\r\n    }\r\n  }\r\n  /*\r\n  Gets rids of CORS filter requirements, allows communication between the Angular project and the Tomcat server.\r\n  */\r\n  getAuthorizedRequestHeader(): HttpHeaders {\r\n    const headers: HttpHeaders = new HttpHeaders({\r\n      Authorization: sessionStorage.getItem(\"CURRENT_USER\"),\r\n      \"Access-Control-Allow-Origin\": \"http://localhost:4200\",\r\n      \"Access-Control-Allow-Credentials\": \"true\",\r\n      \"Access-Control-Allow-Headers\":\r\n        \"Access-Control-Allow-Origin, Access-Control-Allow-Headers, Origin, Accept, X-Requested-With, Authorization, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers\"\r\n    });\r\n    return headers;\r\n  }\r\n  /*\r\n  Gets rid of session storage\r\n  */\r\n  logout() {\r\n    sessionStorage.removeItem(\"CURRENT_USER\");\r\n  }\r\n\r\n  //Checks to see if user is logged in\r\n  isLoggedIn(): boolean {\r\n    return sessionStorage.getItem(\"CURRENT_USER\") !== null;\r\n  }\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\nimport { Trainer } from \"../models/Trainer\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class TrainerService {\r\n  constructor(private _http: HttpClient) {}\r\n\r\n  private current_trainer = new BehaviorSubject(null);\r\n  public current_trainer_bs = this.current_trainer.asObservable();\r\n\r\n  private login_status = new BehaviorSubject(false);\r\n  public login_status_bs = this.login_status.asObservable();\r\n\r\n  //Method call for POST request for registering a new trainer.\r\n  createTrainer(credentials: FormData) {\r\n    return this._http.post<any>(\r\n      \"/PokemonCollector/servlet/unfiltered/register\",\r\n      credentials,\r\n      { observe: \"response\" }\r\n    );\r\n  }\r\n\r\n  updateValidLogin(trainer: Trainer) {\r\n    this.current_trainer.next(trainer);\r\n    this.login_status.next(true);\r\n  }\r\n\r\n  updateLogout() {\r\n    this.current_trainer.next(null);\r\n    this.login_status.next(false);\r\n  }\r\n\r\n  checkSessionStorage() {\r\n    let check = sessionStorage.getItem(\"TRAINER_DATA\");\r\n    if (check != null) {\r\n      this.current_trainer.next(JSON.parse(check));\r\n      this.login_status.next(true);\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  api: {\r\n    login: \"/PokemonCollector/servlet/unfiltered/login\"\r\n  }\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}
